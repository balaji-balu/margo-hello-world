// Code generated by ent, DO NOT EDIT.

package applicationdesc

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/balaji-balu/margo-hello-world/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldName, v))
}

// Vendor applies equality check predicate on the "vendor" field. It's identical to VendorEQ.
func Vendor(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldVendor, v))
}

// Version applies equality check predicate on the "version" field. It's identical to VersionEQ.
func Version(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldVersion, v))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldCategory, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldDescription, v))
}

// Icon applies equality check predicate on the "icon" field. It's identical to IconEQ.
func Icon(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldIcon, v))
}

// Artifacturl applies equality check predicate on the "artifacturl" field. It's identical to ArtifacturlEQ.
func Artifacturl(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldArtifacturl, v))
}

// Site applies equality check predicate on the "site" field. It's identical to SiteEQ.
func Site(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldSite, v))
}

// TagLine applies equality check predicate on the "tag_line" field. It's identical to TagLineEQ.
func TagLine(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldTagLine, v))
}

// Published applies equality check predicate on the "published" field. It's identical to PublishedEQ.
func Published(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldPublished, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldName, v))
}

// VendorEQ applies the EQ predicate on the "vendor" field.
func VendorEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldVendor, v))
}

// VendorNEQ applies the NEQ predicate on the "vendor" field.
func VendorNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldVendor, v))
}

// VendorIn applies the In predicate on the "vendor" field.
func VendorIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldVendor, vs...))
}

// VendorNotIn applies the NotIn predicate on the "vendor" field.
func VendorNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldVendor, vs...))
}

// VendorGT applies the GT predicate on the "vendor" field.
func VendorGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldVendor, v))
}

// VendorGTE applies the GTE predicate on the "vendor" field.
func VendorGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldVendor, v))
}

// VendorLT applies the LT predicate on the "vendor" field.
func VendorLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldVendor, v))
}

// VendorLTE applies the LTE predicate on the "vendor" field.
func VendorLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldVendor, v))
}

// VendorContains applies the Contains predicate on the "vendor" field.
func VendorContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldVendor, v))
}

// VendorHasPrefix applies the HasPrefix predicate on the "vendor" field.
func VendorHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldVendor, v))
}

// VendorHasSuffix applies the HasSuffix predicate on the "vendor" field.
func VendorHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldVendor, v))
}

// VendorIsNil applies the IsNil predicate on the "vendor" field.
func VendorIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldVendor))
}

// VendorNotNil applies the NotNil predicate on the "vendor" field.
func VendorNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldVendor))
}

// VendorEqualFold applies the EqualFold predicate on the "vendor" field.
func VendorEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldVendor, v))
}

// VendorContainsFold applies the ContainsFold predicate on the "vendor" field.
func VendorContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldVendor, v))
}

// VersionEQ applies the EQ predicate on the "version" field.
func VersionEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldVersion, v))
}

// VersionNEQ applies the NEQ predicate on the "version" field.
func VersionNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldVersion, v))
}

// VersionIn applies the In predicate on the "version" field.
func VersionIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldVersion, vs...))
}

// VersionNotIn applies the NotIn predicate on the "version" field.
func VersionNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldVersion, vs...))
}

// VersionGT applies the GT predicate on the "version" field.
func VersionGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldVersion, v))
}

// VersionGTE applies the GTE predicate on the "version" field.
func VersionGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldVersion, v))
}

// VersionLT applies the LT predicate on the "version" field.
func VersionLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldVersion, v))
}

// VersionLTE applies the LTE predicate on the "version" field.
func VersionLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldVersion, v))
}

// VersionContains applies the Contains predicate on the "version" field.
func VersionContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldVersion, v))
}

// VersionHasPrefix applies the HasPrefix predicate on the "version" field.
func VersionHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldVersion, v))
}

// VersionHasSuffix applies the HasSuffix predicate on the "version" field.
func VersionHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldVersion, v))
}

// VersionIsNil applies the IsNil predicate on the "version" field.
func VersionIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldVersion))
}

// VersionNotNil applies the NotNil predicate on the "version" field.
func VersionNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldVersion))
}

// VersionEqualFold applies the EqualFold predicate on the "version" field.
func VersionEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldVersion, v))
}

// VersionContainsFold applies the ContainsFold predicate on the "version" field.
func VersionContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldVersion, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldCategory, v))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldCategory, v))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldCategory, vs...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldCategory, vs...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldCategory, v))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldCategory, v))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldCategory, v))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldCategory, v))
}

// CategoryContains applies the Contains predicate on the "category" field.
func CategoryContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldCategory, v))
}

// CategoryHasPrefix applies the HasPrefix predicate on the "category" field.
func CategoryHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldCategory, v))
}

// CategoryHasSuffix applies the HasSuffix predicate on the "category" field.
func CategoryHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldCategory, v))
}

// CategoryIsNil applies the IsNil predicate on the "category" field.
func CategoryIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldCategory))
}

// CategoryNotNil applies the NotNil predicate on the "category" field.
func CategoryNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldCategory))
}

// CategoryEqualFold applies the EqualFold predicate on the "category" field.
func CategoryEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldCategory, v))
}

// CategoryContainsFold applies the ContainsFold predicate on the "category" field.
func CategoryContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldCategory, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldDescription, v))
}

// IconEQ applies the EQ predicate on the "icon" field.
func IconEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldIcon, v))
}

// IconNEQ applies the NEQ predicate on the "icon" field.
func IconNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldIcon, v))
}

// IconIn applies the In predicate on the "icon" field.
func IconIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldIcon, vs...))
}

// IconNotIn applies the NotIn predicate on the "icon" field.
func IconNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldIcon, vs...))
}

// IconGT applies the GT predicate on the "icon" field.
func IconGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldIcon, v))
}

// IconGTE applies the GTE predicate on the "icon" field.
func IconGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldIcon, v))
}

// IconLT applies the LT predicate on the "icon" field.
func IconLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldIcon, v))
}

// IconLTE applies the LTE predicate on the "icon" field.
func IconLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldIcon, v))
}

// IconContains applies the Contains predicate on the "icon" field.
func IconContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldIcon, v))
}

// IconHasPrefix applies the HasPrefix predicate on the "icon" field.
func IconHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldIcon, v))
}

// IconHasSuffix applies the HasSuffix predicate on the "icon" field.
func IconHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldIcon, v))
}

// IconIsNil applies the IsNil predicate on the "icon" field.
func IconIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldIcon))
}

// IconNotNil applies the NotNil predicate on the "icon" field.
func IconNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldIcon))
}

// IconEqualFold applies the EqualFold predicate on the "icon" field.
func IconEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldIcon, v))
}

// IconContainsFold applies the ContainsFold predicate on the "icon" field.
func IconContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldIcon, v))
}

// ArtifacturlEQ applies the EQ predicate on the "artifacturl" field.
func ArtifacturlEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldArtifacturl, v))
}

// ArtifacturlNEQ applies the NEQ predicate on the "artifacturl" field.
func ArtifacturlNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldArtifacturl, v))
}

// ArtifacturlIn applies the In predicate on the "artifacturl" field.
func ArtifacturlIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldArtifacturl, vs...))
}

// ArtifacturlNotIn applies the NotIn predicate on the "artifacturl" field.
func ArtifacturlNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldArtifacturl, vs...))
}

// ArtifacturlGT applies the GT predicate on the "artifacturl" field.
func ArtifacturlGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldArtifacturl, v))
}

// ArtifacturlGTE applies the GTE predicate on the "artifacturl" field.
func ArtifacturlGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldArtifacturl, v))
}

// ArtifacturlLT applies the LT predicate on the "artifacturl" field.
func ArtifacturlLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldArtifacturl, v))
}

// ArtifacturlLTE applies the LTE predicate on the "artifacturl" field.
func ArtifacturlLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldArtifacturl, v))
}

// ArtifacturlContains applies the Contains predicate on the "artifacturl" field.
func ArtifacturlContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldArtifacturl, v))
}

// ArtifacturlHasPrefix applies the HasPrefix predicate on the "artifacturl" field.
func ArtifacturlHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldArtifacturl, v))
}

// ArtifacturlHasSuffix applies the HasSuffix predicate on the "artifacturl" field.
func ArtifacturlHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldArtifacturl, v))
}

// ArtifacturlIsNil applies the IsNil predicate on the "artifacturl" field.
func ArtifacturlIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldArtifacturl))
}

// ArtifacturlNotNil applies the NotNil predicate on the "artifacturl" field.
func ArtifacturlNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldArtifacturl))
}

// ArtifacturlEqualFold applies the EqualFold predicate on the "artifacturl" field.
func ArtifacturlEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldArtifacturl, v))
}

// ArtifacturlContainsFold applies the ContainsFold predicate on the "artifacturl" field.
func ArtifacturlContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldArtifacturl, v))
}

// SiteEQ applies the EQ predicate on the "site" field.
func SiteEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldSite, v))
}

// SiteNEQ applies the NEQ predicate on the "site" field.
func SiteNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldSite, v))
}

// SiteIn applies the In predicate on the "site" field.
func SiteIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldSite, vs...))
}

// SiteNotIn applies the NotIn predicate on the "site" field.
func SiteNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldSite, vs...))
}

// SiteGT applies the GT predicate on the "site" field.
func SiteGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldSite, v))
}

// SiteGTE applies the GTE predicate on the "site" field.
func SiteGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldSite, v))
}

// SiteLT applies the LT predicate on the "site" field.
func SiteLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldSite, v))
}

// SiteLTE applies the LTE predicate on the "site" field.
func SiteLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldSite, v))
}

// SiteContains applies the Contains predicate on the "site" field.
func SiteContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldSite, v))
}

// SiteHasPrefix applies the HasPrefix predicate on the "site" field.
func SiteHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldSite, v))
}

// SiteHasSuffix applies the HasSuffix predicate on the "site" field.
func SiteHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldSite, v))
}

// SiteIsNil applies the IsNil predicate on the "site" field.
func SiteIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldSite))
}

// SiteNotNil applies the NotNil predicate on the "site" field.
func SiteNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldSite))
}

// SiteEqualFold applies the EqualFold predicate on the "site" field.
func SiteEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldSite, v))
}

// SiteContainsFold applies the ContainsFold predicate on the "site" field.
func SiteContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldSite, v))
}

// TagLineEQ applies the EQ predicate on the "tag_line" field.
func TagLineEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldTagLine, v))
}

// TagLineNEQ applies the NEQ predicate on the "tag_line" field.
func TagLineNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldTagLine, v))
}

// TagLineIn applies the In predicate on the "tag_line" field.
func TagLineIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldTagLine, vs...))
}

// TagLineNotIn applies the NotIn predicate on the "tag_line" field.
func TagLineNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldTagLine, vs...))
}

// TagLineGT applies the GT predicate on the "tag_line" field.
func TagLineGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldTagLine, v))
}

// TagLineGTE applies the GTE predicate on the "tag_line" field.
func TagLineGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldTagLine, v))
}

// TagLineLT applies the LT predicate on the "tag_line" field.
func TagLineLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldTagLine, v))
}

// TagLineLTE applies the LTE predicate on the "tag_line" field.
func TagLineLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldTagLine, v))
}

// TagLineContains applies the Contains predicate on the "tag_line" field.
func TagLineContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldTagLine, v))
}

// TagLineHasPrefix applies the HasPrefix predicate on the "tag_line" field.
func TagLineHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldTagLine, v))
}

// TagLineHasSuffix applies the HasSuffix predicate on the "tag_line" field.
func TagLineHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldTagLine, v))
}

// TagLineIsNil applies the IsNil predicate on the "tag_line" field.
func TagLineIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldTagLine))
}

// TagLineNotNil applies the NotNil predicate on the "tag_line" field.
func TagLineNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldTagLine))
}

// TagLineEqualFold applies the EqualFold predicate on the "tag_line" field.
func TagLineEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldTagLine, v))
}

// TagLineContainsFold applies the ContainsFold predicate on the "tag_line" field.
func TagLineContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldTagLine, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldTags))
}

// PublishedEQ applies the EQ predicate on the "published" field.
func PublishedEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEQ(FieldPublished, v))
}

// PublishedNEQ applies the NEQ predicate on the "published" field.
func PublishedNEQ(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNEQ(FieldPublished, v))
}

// PublishedIn applies the In predicate on the "published" field.
func PublishedIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIn(FieldPublished, vs...))
}

// PublishedNotIn applies the NotIn predicate on the "published" field.
func PublishedNotIn(vs ...string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotIn(FieldPublished, vs...))
}

// PublishedGT applies the GT predicate on the "published" field.
func PublishedGT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGT(FieldPublished, v))
}

// PublishedGTE applies the GTE predicate on the "published" field.
func PublishedGTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldGTE(FieldPublished, v))
}

// PublishedLT applies the LT predicate on the "published" field.
func PublishedLT(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLT(FieldPublished, v))
}

// PublishedLTE applies the LTE predicate on the "published" field.
func PublishedLTE(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldLTE(FieldPublished, v))
}

// PublishedContains applies the Contains predicate on the "published" field.
func PublishedContains(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContains(FieldPublished, v))
}

// PublishedHasPrefix applies the HasPrefix predicate on the "published" field.
func PublishedHasPrefix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasPrefix(FieldPublished, v))
}

// PublishedHasSuffix applies the HasSuffix predicate on the "published" field.
func PublishedHasSuffix(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldHasSuffix(FieldPublished, v))
}

// PublishedIsNil applies the IsNil predicate on the "published" field.
func PublishedIsNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldIsNull(FieldPublished))
}

// PublishedNotNil applies the NotNil predicate on the "published" field.
func PublishedNotNil() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldNotNull(FieldPublished))
}

// PublishedEqualFold applies the EqualFold predicate on the "published" field.
func PublishedEqualFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldEqualFold(FieldPublished, v))
}

// PublishedContainsFold applies the ContainsFold predicate on the "published" field.
func PublishedContainsFold(v string) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.FieldContainsFold(FieldPublished, v))
}

// HasDeploymentProfiles applies the HasEdge predicate on the "deployment_profiles" edge.
func HasDeploymentProfiles() predicate.ApplicationDesc {
	return predicate.ApplicationDesc(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, DeploymentProfilesTable, DeploymentProfilesColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasDeploymentProfilesWith applies the HasEdge predicate on the "deployment_profiles" edge with a given conditions (other predicates).
func HasDeploymentProfilesWith(preds ...predicate.DeploymentProfile) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(func(s *sql.Selector) {
		step := newDeploymentProfilesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ApplicationDesc) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ApplicationDesc) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ApplicationDesc) predicate.ApplicationDesc {
	return predicate.ApplicationDesc(sql.NotPredicates(p))
}
